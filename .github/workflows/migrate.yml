name: Migrate

on:
  push:
    branches:
      - main
      - production
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - "staging"
          - "production"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}

jobs:
  migrate:
    name: Migrate

    runs-on: ubuntu-latest

    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'staging' || 'production') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: yarn

      - run: yarn install --immutable

      - name: Check if migrations are up to date
        run: |
          yarn gen:migration
          git status --porcelain | grep 'migrations/' && echo 'Unstaged migration detected!' && exit 1 || echo 'Migrations are up to date.'

      - name: Generate wrangler.toml
        run: |
          touch .env
          yarn gen:wrangler.toml
        env:
          D1_DATABASE_NAME: ${{ secrets.D1_DATABASE_NAME }}
          D1_DATABASE_ID: ${{ secrets.D1_DATABASE_ID }}

      - name: Perform migration
        run: yarn wrangler d1 migrations apply ${{ secrets.D1_DATABASE_NAME }} --remote
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
